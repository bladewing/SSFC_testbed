Install ansible:
    ids-bypass-instantiation/bootstrap_ansible.sh

Install vagrant:
    Todo

Run vagrant:
    From ids-bypass-instantiation:
        vagrant up

Run ansible:
From ids-bypass-instantiation/ansible:
!! dont do a vagrant reload (timeout!)
    main playbook, do this first:
    ansible-playbook --inventory-file hosts-vagrant playbook.yml

    all others:
    ls *.yml | grep -v playbook.yml | xargs -I % ansible-playbook --inventory-file hosts-vagrant %
    one host:
    ansible-playbook --inventory-file hosts-vagrant **host**.yml

Run l7sdntest:
    Master:
        from l7sdntest subfolder:
            sudo java -jar l7sdntest.jar expcontr **ConfigurationFile (same dir)**

Master:
    ryu:
        Starting ryu:
            ryu-manager ryu.app.ofctl_rest
        Get the list of all Switches Connected to the controller:
            curl -X GET http://localhost:8080/stats/switches (from master)
            curl -X GET http://192.168.206.1:8080/stats/switches (from anywhere else)


clientHost:


ids/sa1:
    Starting snort:
        sudo snort -c /etc/snort/snort.conf -Q -i enp0s9:enp0s10 --daq afpacket --daq-mode inline -A unsock
        alternative: sudo snort A console

    Example snort rule:
        alert icmp $EXTERNAL_NET any -> $EXTERNAL_NET any (msg:”Ping”;sid:232;gid:666;rev:5;)

    Send alert to wrapper:
        curl -d '{"rate":"1", "misc":""}' -H "Content-Type: application/json" -X POST localhost:5001/attack

fw/sa2:
    Example firewall rule:
        sudo iptables -A FORWARD -p icmp -j DROP


ddors/sa3:


server:


switch:
    Add a flow from X to Y:
    sudo ovs-ofctl add-flow br0 in_port=X,actions=Y

    Flows:

    client -> FW -> server
    1 -> 6
    5 -> 9
    9 -> 1

    client -> IDS -> server
    1 -> 4
    3 -> 9
    9 -> 1


